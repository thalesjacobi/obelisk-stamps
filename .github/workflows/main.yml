name: Deploy Application

on:
  push:
    branches:
      - main  # Runs the workflow when pushing to the main branch
  pull_request:
    branches:
      - main  # Runs the workflow on pull requests to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure you have a requirements.txt

      - name: Set environment variables
        run: |
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> $GITHUB_ENV
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> $GITHUB_ENV

      - name: Verify Secrets (Debugging)
        run: |
          echo "Checking if secrets are set..."
          echo "DB_PASSWORD is set? " $(if [ -z "$DB_PASSWORD" ]; then echo "NO"; else echo "YES"; fi)
          echo "MAIL_PASSWORD is set? " $(if [ -z "$MAIL_PASSWORD" ]; then echo "NO"; else echo "YES"; fi)

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Authenticate Docker with GCR
        run: gcloud auth configure-docker gcr.io

      - name: Build the container image
        run: docker build -t gcr.io/obelisk-stamps/your-image-name:latest .

      - name: Push the container image
        run: docker push gcr.io/obelisk-stamps/your-image-name:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy your-service-name \
            --image gcr.io/obelisk-stamps/your-image-name:latest \
            --platform managed \
            --region us-central1 \
            --set-env-vars DB_PASSWORD=${{ secrets.DB_PASSWORD }},MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }},GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }},GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
